@model NewFashion.ViewModels.FactoryProduction

@{
    ViewBag.Title = "Customized Production";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Customized Production</h2>
<h6>Please enter Quantity and Select the type of Product you want to create</h6>

<div class="container">


    @using (Html.BeginForm("CustomProduction", "Factories"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="row">

                <div data-role="dynamic-fields" class="dynamicfields">
                    <div class="form-inline">

                        <div id="quantity" class="form-inline col-md-3">
                            @Html.LabelFor(model => Model.Quantity)
                            @Html.EditorFor(modelItem => Model.Quantity, new { @class = "form-control", autofocus = "autofoocus" })
                            @Html.ValidationMessageFor(modelItem => Model.Quantity, String.Empty, new { @class = "text-danger" })
                        </div>



                        <div class="form-group col-md-2">
                            @Html.LabelFor(modelItem => Model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(modelItem => modelItem.Gender, htmlAttributes: new { @class = "form-control" })
                            </div>

                            @Html.ValidationMessageFor(modelItem => Model.Gender, String.Empty, new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-2">
                            @Html.LabelFor(modelItem => Model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(modelItem => modelItem.Type, htmlAttributes: new { @class = "form-control" })
                            </div>

                            @Html.ValidationMessageFor(modelItem => Model.Type, String.Empty, new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-2">
                            @Html.LabelFor(modelItem => Model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(modelItem => modelItem.Size, htmlAttributes: new { @class = "form-control" })
                            </div>

                            @Html.ValidationMessageFor(modelItem => Model.Size, String.Empty, new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-2">
                            @Html.LabelFor(modelItem => Model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(modelItem => modelItem.Color, htmlAttributes: new { @class = "form-control" })
                            </div>

                            @Html.ValidationMessageFor(modelItem => Model.Color, String.Empty, new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <input type="submit" value="Proceed" class="btn btn-success" />


    }


    <input id="backToProduction" type="button" value="Back to Production" class="btn btn-info btn-sm"
           onclick="@("window.location.href='" + @Url.Action("Production", "Factories") + "'");" />

</div>
@section scripts
{

    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    #backToProduction {
        margin-top: 10px;
    }
</style>